-- VHDL Entity ADD_SingleCycle_lib.mw_ramsp_279b0494.MW
--
-- Created:
--          by - Rebecca.UNKNOWN (ATHENA)
--          at - 21:07:42 03/ 4/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY cachedata_lols_V2 IS
   PORT( 
      addr : IN     std_logic_vector (3 DOWNTO 0);
      slicer: IN    std_logic_vector (1 DOWNTO 0);
      clk  : IN     std_logic;
      din  : IN     std_logic_vector (63 DOWNTO 0);
      we   : IN     std_logic;
      dout : OUT    std_logic_vector (15 DOWNTO 0)
   );

-- Declarations

END cachedata_lols_V2 ;

ARCHITECTURE Behavior OF cachedata_lols_V2 IS
   TYPE MW_RAM_TYPE IS ARRAY (((2**4) -1) DOWNTO 0) OF std_logic_vector(63 DOWNTO 0);
   SIGNAL mw_ram_table : MW_RAM_TYPE := (OTHERS => "0000000000000000000000000000000000000000000000000000000000000000");
   SIGNAL mw_addr_reg: std_logic_vector(3 DOWNTO 0);
   SIGNAL dtemp : std_logic_vector(15 DOWNTO 0);
   
BEGIN

    --ModuleWare code(v1.9) for instance of 'mw_ramsp_279b0494'

   --attribute block_ram : boolean;
   --attribute block_ram of mem : signal is false;
   ram_p_proc: PROCESS (clk)
   --VARIABLE dtemp : std_logic_vector(15 DOWNTO 0);
   
   BEGIN
       
     IF (clk'EVENT AND clk='1') THEN
         --MISS   
         IF (we = '1') THEN --if the data for the specific instruction wasn't in memory then....
            --put the value from Main mem into the cache
            mw_ram_table(CONV_INTEGER(unsigned(addr))) <= din;
         ELSE
         END IF;
         
         IF ( slicer = "11") THEN
          dtemp <= mw_ram_table(CONV_INTEGER(unsigned(addr))) ( 63 DOWNTO 48);
         ELSIF ( slicer = "10" ) THEN
          dtemp <= mw_ram_table(CONV_INTEGER(unsigned(addr))) ( 47 DOWNTO 32);
         ELSIF ( slicer = "01" ) THEN
          dtemp <= mw_ram_table(CONV_INTEGER(unsigned(addr))) ( 31 DOWNTO 16);
         ELSE
          dtemp <= mw_ram_table(CONV_INTEGER(unsigned(addr))) ( 15 DOWNTO 0);
         END IF;
         
      END IF; 
     
   END PROCESS ram_p_proc;
   dout <= dtemp;
   
END Behavior;
